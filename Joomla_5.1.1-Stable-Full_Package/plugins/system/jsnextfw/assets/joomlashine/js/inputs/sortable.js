var InputSortable=api.InputSortable=api.extendReactClass('MixinInput',{getInitialState:function(){return{items:[],value:this.props.value||[],itemListKey:api.Text.toId('itemList',true)};},componentWillMount:function(){this.parent();this.loadingSortableTimer&&clearTimeout(this.loadingSortableTimer);this.loadingSortableTimer=setTimeout(function(){api.Ajax.loadScript(api.urls.plugin+'/assets/vendors/html.sortable.min.js',this.forceUpdate.bind(this));}.bind(this),500);if(this.props.control.items){if(this.props.control.items instanceof Array){this.setState({items:this.props.control.items});}else if(typeof this.props.control.items=='string'){api.Ajax.request(this.props.control.items,function(res){if(res.responseJSON&&res.responseJSON.success){this.setState({items:res.responseJSON.data});}}.bind(this));}}},render:function(){if(!this.state.items.length){return React.createElement(api.ElementLoading,{inline:true});}return React.createElement('div',{ref:'mountedDOMNode',key:this.props.id||api.Text.toId(),className:'form-group '+(this.props.control['class']||this.props.control.className||'')},React.createElement('label',{className:this.props.control.labelClass||''},this.label,this.tooltip),React.createElement('div',{className:this.props.control.inputClass||''},React.createElement('div',{className:'card card-default'},React.createElement('div',{className:'card-body'},React.createElement('ul',{id:this.props.id+'_list',key:this.state.itemListKey,ref:'list',className:'item-list'},this.state.items.map((item,index)=>{var name=this.props.setting,checked;if(this.props.control.checkbox){name+='['+item.value+']';checked=this.state.value[item.value]?parseInt(this.state.value[item.value]):0;}else{name+='[]';}return React.createElement('li',{className:this.props.id+'_list-item','data-value':item.value},React.createElement('i',{className:'fa fa fa-ellipsis-v sortable-handler '+this.props.id+'_list-handler'}),React.createElement('i',{className:'fa fa fa-ellipsis-v sortable-handler '+this.props.id+'_list-handler'}),' ',React.createElement('label',null,this.props.control.checkbox?React.createElement('input',{type:'checkbox',checked:checked?true:false,onClick:this.checkItem.bind(this,item.value),value:item.value}):null,React.createElement('input',{type:'hidden',name:name,value:this.props.control.checkbox?checked:item.value}),item.title||item.text));}))))));},componentWillUpdate:function(){this.deinitSortable();},componentDidUpdate:function(){this.parent();this.initSortable();},componentWillUnmount:function(){this.parent();this.deinitSortable();},initSortable:function(){if(typeof window.sortable=='function'&&this.refs.mountedDOMNode){var lists=this.refs.mountedDOMNode.querySelectorAll('.item-list');for(var i=0;i<lists.length;i++){var id=lists[i].getAttribute('id');(this.sortable=this.sortable||{})[id]=sortable(lists[i],{connectWith:this.props.id+'_'+this.props.setting,items:'.'+id+'-item',handle:'.'+id+'-handler',forcePlaceholderSize:true});api.Event.add(this.sortable[id][0],'sortupdate',this.handleSort);}}},deinitSortable:function(){if(this.sortable){var lists=this.refs.mountedDOMNode.querySelectorAll('.item-list');for(var i=0;i<lists.length;i++){var id=lists[i].getAttribute('id');if(this.sortable[id]){api.Event.remove(this.sortable[id][0],'sortupdate',this.handleSort);sortable(lists[i],'destroy');}}delete this.sortable;}},handleSort:function(){var elms=this.refs.mountedDOMNode.querySelectorAll('.item-list>li');var items=[];var value=this.props.control.checkbox?{}:[];for(var i=0;i<elms.length;i++){for(var j=0;j<this.state.items.length;j++){if(elms[i].getAttribute('data-value')==this.state.items[j].value){items.push(this.state.items[j]);}}if(this.props.control.checkbox){var checkbox=elms[i].querySelector('input[type="checkbox"]');if(this.state.value[checkbox.value]===undefined){value[checkbox.value]=checkbox.checked?1:0;}else{value[checkbox.value]=this.state.value[checkbox.value];}}else{value.push(elms[i].getAttribute('data-value'));}}this.state.items=items;this.state.itemListKey=api.Text.toId('itemList',true);this.change(this.props.setting,value);},checkItem:function(item,event){var elms=this.refs.mountedDOMNode.querySelectorAll('input[type="checkbox"]');var value={};for(var i=0;i<elms.length;i++){if(elms[i].value==item){value[item]=event.target.checked?1:0;}else if(this.state.value[elms[i].value]===undefined){value[elms[i].value]=elms[i].checked?1:0;}else{value[elms[i].value]=this.state.value[elms[i].value];}}this.change(this.props.setting,value);}});